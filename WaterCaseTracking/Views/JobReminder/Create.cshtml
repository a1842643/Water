@model WaterCaseTracking.Models.ViewModels.JobReminder.SearchItemViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    //初始設定
    $(function () {
        ActionDetail();
        CallChangefunc(this.value, this.text);
    });

    function ActionDetail() {
        $('#CategoryId option[value=1]').attr('selected', 'selected');
    }

    function CallChangefunc(value, text) {
        $('#txt_ActionCode').val($("select[name='CategoryId']").val());
        $('#txt_ActionName').val($("select[name='CategoryId'] option:selected").text());
    }
    function BackList(){

    }
</script>
<section class="content-header">
    <h1>
        工作提醒(月執行)
    </h1>
</section>
@using (Html.BeginForm()) {
    @*@Html.AntiForgeryToken()*@

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ActionName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("CategoryId",null, new { @onchange = "CallChangefunc(this.value,this.text)", @class = "form-control" }})*@
                @Html.DropDownList("CategoryId", Model.ActionGroups as IEnumerable<SelectListItem>, new { @onchange = "CallChangefunc(this.value,this.text)", @class = "form-control" })
                @*@Html.DropDownListFor(x => x.ActionGroupsitems, Model.ActionGroups)*@
                <input id ="txt_ActionCode" name="ActionCode" type="hidden" value="" />
                <input id ="txt_ActionName" name="ActionName" type="hidden" value="" />
            </div >
        </div >
        <div class="form-group">
            @Html.LabelFor(model => model.WorkStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.WorkStart, new { type="number", min="1", max="28" })
                @*@Html.EditorFor(model => model.WorkStart, new { htmlAttributes = new { @class = "form-control"} })*@
                @Html.ValidationMessageFor(model => model.WorkStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.WorkEnd, new { type = "number", min = "1", max = "28" })
                @*@Html.EditorFor(model => model.WorkEnd, new { htmlAttributes = new { @class = "form-control"} })*@
                @Html.ValidationMessageFor(model => model.WorkEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.WorkStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkStart, new { htmlAttributes = new { @class = "form-control datepicker" , @Value = DateTime.Now.AddYears(-1911).ToString("yyy/MM/dd") } })
                @Html.ValidationMessageFor(model => model.WorkStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WorkEnd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkEnd, new { htmlAttributes = new { @class = "form-control datepicker" , @Value = DateTime.Now.AddYears(-1911).ToString("yyy/MM/dd") } })
                @Html.ValidationMessageFor(model => model.WorkEnd, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.WorkName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WorkName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsRun, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsRun, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsRun, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsNotice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsNotice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsNotice, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="存檔" class="btn btn-primary" />
                @Html.ActionLink("返回", "Maintain", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}
@*@if (TempData["message"] != null) {
    <script type="text/javascript">
            var message = @Html.Raw(Json.Encode(TempData["message"]));
            alert(message);
            TempData["message"] = null;
    </script>
}*@
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@





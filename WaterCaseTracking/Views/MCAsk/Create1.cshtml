@model WaterCaseTracking.Models.MCAskModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    //初始化
    $.ajax({
        type: 'POST',
        data: '{}',
        //async: false, //啟用同步請求
        url: '@Url.Action("searchInitCM", "MCAsk")',
        contenType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (result) {
            //失敗的處理
            if (result.db_Result) {
                alert(result.db_Result);
                return;
            }
            //地區下拉選單
            var ddlAreaHtml = "<option value=''>請選擇</option>";
            $.each(result.ddlArea.DropDownListLT, function (i, ddl) {
                ddlAreaHtml += '<option value="' + ddl.Values + '">' + ddl.Text + '</option>';
            });
            $('#ddlArea').html(ddlAreaHtml);
            $('#ddlArea').val('@Model.Area');
            //狀態下拉選單
            var ddlsStatusHtml = "<option value=''>請選擇</option>";
            $.each(result.ddlsStatus.DropDownListLT, function (i, ddl) {
                ddlsStatusHtml += '<option value="' + ddl.Values + '">' + ddl.Text + '</option>';
            });
            $('#ddlsStatus').html(ddlsStatusHtml);
            $('#ddlsStatus').val('@Model.sStatus');
            //科室下拉選單
            var ddlOrganizer = "<option value=''>全部</option>";
            $.each(result.ddlOrganizer.DropDownListLT, function (i, ddl) {
                //判斷資料維護者或使用者就只能有自己科室
                if ('@(Session["roleName"] as string)' == 'maintain' || '@(Session["roleName"] as string)' == 'user') {
                    if (ddl.Values == '@(Session["Organizer"] as String)')
                        ddlOrganizer = '<option value="' + ddl.Values + '">' + ddl.Text + '</option>';
                }
                else {
                    ddlOrganizer += '<option value="' + ddl.Values + '">' + ddl.Text + '</option>';
                }
            });
            $('#ddlOrganizer').html(ddlOrganizer);
            $('#ddlOrganizer').val('@Model.Organizer');

        }, fail: function () {
            alert('匯入失敗!!');
        }
    })
    function infoArea() {
        $('#areaSelected').dialog({
            autoOpen: false,
            modal: true,
            width: 800,
            heihgt: 550,
            position: { my: "center", at: "left+800px top+100px ", of: window },
            title: "選擇地區",
            open: function () {
                $('.ui-dialog-buttonpane').find('button').removeClass();
                $('.ui-dialog-buttonpane').find('button').addClass('btn btn-success btn-md');
                $('.ui-dialog-titlebar-close').text('x');
            },
            close: function () {

            },
            buttons: [
                {
                    text: "清空",
                    "class": "btn btn-success btn-md",
                    click: function () {
                        $('#divSlowSelected').html('');
                    }
                },
                {
                    text: "確定",
                    "class": "btn btn-success btn-md",
                    click: function () {
                        $('#areaSelected').dialog('close');
                        $('#Area').val($('#divSlowSelected').html());
                        $('#hidArea').val($('#divSlowSelected').html());
                    }
                },
                {
                    text: "取消",
                    "class": "btn btn-warning btn-md",
                    click: function () {
                        $('#areaSelected').dialog('close');
                    }
                }
            ]
        });
        $('#areaSelected').html("讀取資料中");
        var url = "/Common/_AreaList?Area=" + encodeURIComponent($('#Area').val());
        $.get(url, function (data) {
            $('#areaSelected').html(data);
        });
        $('#areaSelected').dialog('open');
        return false;
    }
</script>

@using (Html.BeginForm())
{
    <div id="areaSelected"></div>
    @*@Html.AntiForgeryToken()*@
    <section class="content-header">
        <h1>
            議員詢問事項-新增
        </h1>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.AskDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.AskDate, new { htmlAttributes = new { @class = "form-control " } })
                                @Html.ValidationMessageFor(model => model.AskDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control datepicker", @disabled = "disabled" } })
                                <input type="hidden" id="hidArea" name="Area" />
                                <input type="button" onclick="infoArea();" value="選擇地區" />
                                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MemberName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MemberName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MemberName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Inquiry, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Inquiry, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Inquiry, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.HandlingSituation, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.HandlingSituation, new { htmlAttributes = new { @class = "form-control ckeditor", rows = "4"  } })
                                @Html.ValidationMessageFor(model => model.HandlingSituation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DetailHandlingSituation, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DetailHandlingSituation, new { htmlAttributes = new { @class = "form-control", rows = "4" } })
                                @Html.ValidationMessageFor(model => model.DetailHandlingSituation, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.Organizer, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select name="Organizer" id="ddlOrganizer" class="form-control"></select>
                                @Html.ValidationMessageFor(model => model.Organizer, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.OrganizerMan, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OrganizerMan, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OrganizerMan, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.sStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select name="sStatus" id="ddlsStatus" class="form-control"></select>
                                @Html.ValidationMessageFor(model => model.sStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="新增" class="btn btn-default" />
                                @Html.ActionLink("返回", "Maintain0", null, new { @class = "btn btn-default" })
                            </div>
                        </div>
                        <input type="hidden" name="Types" value="1" />
                    </div>
                </div>
            </div>
        </div>
    </section>
}
